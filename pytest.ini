[pytest]
# Pytest Configuration for RedCell

# Test Discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output Options
addopts =
    -v
    --strict-markers
    --tb=short
    --cov=c2
    --cov=recon
    --cov=initial_access
    --cov=post_exploitation
    --cov=lateral_movement
    --cov=exfiltration
    --cov=evasion
    --cov=utils
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=70

# Markers for Test Organization
markers =
    unit: Unit tests for individual functions/classes
    integration: Integration tests for component interaction
    e2e: End-to-end tests for full attack chain
    c2: Command & Control tests
    recon: Reconnaissance tool tests
    exploit: Exploitation tests
    persistence: Persistence mechanism tests
    evasion: Defensive evasion tests
    slow: Tests that take a long time to run

# Coverage Options
[coverage:run]
source = .
omit =
    */tests/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
